# ----------------------------------------------------------------------
# PATH
# ----------------------------------------------------------------------
 
# we want the various sbins on the path along with /usr/local/bin
PATH="/usr/local/bin:$PATH:/usr/local/sbin:/usr/sbin:/sbin"

# python binaries to PATH
if [[ -n "$(command -v python)" ]]; then
  PYTHONBIN=$(python -c "import sys,os;\
    print os.path.normpath(os.path.join(sys.prefix,'bin'))")
  PATH="$PYTHONBIN:$PATH"
fi

# Gem binaries to PATH
if [[ -n "$(command -v gem)" ]]; then
  GEMBIN=$(ruby -e 'begin; require "rubygems"; puts Gem.bindir;rescue LoadError; exit 1; end') && \
    PATH="$GEMBIN:$PATH"
fi

# node
if [[ -n "$(command -v node)" ]]; then
  NODE_PATH="/usr/local/lib/node:$NODE_PATH"
fi
 
# add ~/bin on PATH if you have it
test -d "$HOME/bin" && PATH="$HOME/bin:$PATH"
 
# add ~/.bin on PATH if you have it
test -d "$HOME/.bin" && PATH="$HOME/.bin:$PATH"

export PATH

# ----------------------------------------------------------------------
# MANPATH
# ----------------------------------------------------------------------

MANPATH="/usr/local/share/man:$MANPATH"

export MANPATH

# ----------------------------------------------------------------------
# MAILCHECK
# ----------------------------------------------------------------------

unset MAILCHECK

# ----------------------------------------------------------------------
# COLORS
# ----------------------------------------------------------------------

export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export LS_COLORS="di=1;;40:ln=1;;40:so=1;;40:pi=1;;40:ex=1;;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:"

# if the dircolors utility is available, set that up to
if test -n "$(command -v gdircolors)"; then
  dircolors=`which gdircolors`
elif test -n "$(command -v dircolors)"; then
  dircolors=`which dircolors`
fi
test -n "$dircolors" && {
  COLORS=/etc/DIR_COLORS
  test -e "/etc/DIR_COLORS.$TERM" && COLORS="/etc/DIR_COLORS.$TERM"
  test -e "$HOME/.dircolors" && COLORS="$HOME/.dircolors"
  test ! -e "$COLORS" && COLORS=
    eval `$dircolors --sh $COLORS`
}
unset dircolors
 
# ----------------------------------------------------------------------
# DISPLAY
# ----------------------------------------------------------------------

test -n $SSH_CONNECTION && export DISPLAY=:0.0

# ----------------------------------------------------------------------
# PAGER / EDITOR
# ----------------------------------------------------------------------

test -n "$(command -v vim)" && EDITOR=vim || EDITOR=vi

test -n "$(command -v less)" && PAGER="less -FirSwX" || PAGER=more

MANPAGER="$PAGER"

export EDITOR PAGER MANPAGER

# ----------------------------------------------------------------------
# HISTORY
# ----------------------------------------------------------------------

# ignore same successive entries.
export HISTCONTROL=ignoreboth

# ----------------------------------------------------------------------
# LANGUAGES
# ----------------------------------------------------------------------

case "${OSTYPE}" in
  darwin*)
    # java variables
    export JAVA_HOME='/System/Library/Frameworks/JavaVM.framework/Home'
    export PATH="/System/Library/Frameworks/JavaVM.framework/Home/bin:$PATH"
    export ANT_HOME='/Developer/Java/ant'
    ;;
  linux*)
    # actually ubuntu specific
    export JAVA_HOME='/usr/lib/jvm/java-6-sun'
    export PATH="/usr/lib/jvm/java-6-sun/bin:$PATH"
    ;;
esac

# java heap size set to 768m
export JAVA_OPTS="$JAVA_OPTS -Xmx768m"

# GRAILS
test -d "$HOME/lib/grails" && {
  export GRAILS_HOME="$HOME/lib/grails"
  export PATH="$GRAILS_HOME/bin:$PATH"
}

# CLOJURE
test -f "$HOME/lib/clojure.jar" && {
  CLASSPATH="$CLASSPATH:$HOME/lib/clojure.jar"
  CLASSPATH="$CLASSPATH:$HOME/lib/clojure-contrib.jar"
  export CLASSPATH
}

# LIFT
test -f "/Applications/liftweb-1.0.1/apache-maven" && {
  export M2_HOME="/Applications/liftweb-1.0.1/apache-maven"
  export M2="$M2_HOME/bin"
  export MAVEN_OPTS="-noverify" 
  export PATH="$M2:$PATH"
}

# NPM
test -f "$HOME/.npmrc" && {
  NPM_PATH=$(cat "$HOME/.npmrc" | grep "root = " | cut -f3 -d' ')
  export NODE_PATH="$NPM_PATH:$NODE_PATH"
  export PATH="/usr/local/share/npm/bin:$PATH"
}

# ----------------------------------------------------------------------
# MISC
# ----------------------------------------------------------------------

# ec2
test -d "$HOME/.ec2" && {
  export EC2_HOME="$HOME/.ec2"
  export PATH="$PATH:$EC2_HOME/bin"
}
